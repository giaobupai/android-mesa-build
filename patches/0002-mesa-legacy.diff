diff --git a/log.pc b/log.pc
new file mode 100644
index 0000000..f57e8ad
--- /dev/null
+++ b/log.pc
@@ -0,0 +1,4 @@
+Name: log
+Description: Android liblog library
+Version: 1.0
+Libs: -llog
\ No newline at end of file
diff --git a/meson_options.txt b/meson_options.txt
index a3f98b0..2292538 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -575,7 +575,7 @@ option(
 option(
   'platform-sdk-version',
   type : 'integer',
-  min : 25,
+  min : 24,
   max : 10000,
   value : 25,
   description : 'Android Platform SDK version. Default: Nougat version.'
diff --git a/nativewindow.pc b/nativewindow.pc
new file mode 100644
index 0000000..6327281
--- /dev/null
+++ b/nativewindow.pc
@@ -0,0 +1,4 @@
+	Name: nativewindow
+Description: Android libnativewindow library
+Version: 1.0
+Libs:
\ No newline at end of file
diff --git a/src/android_stub/meson.build b/src/android_stub/meson.build
index 0e3f27b..03781da 100644
--- a/src/android_stub/meson.build
+++ b/src/android_stub/meson.build
@@ -1,6 +1,6 @@
 if with_android_stub
   stub_libs = []
-  lib_names = ['hardware', 'log', 'nativewindow', 'sync']
+  lib_names = ['cutils', 'backtrace', 'hardware', 'log', 'nativewindow', 'sync']
 
   if with_libbacktrace
     lib_names += ['backtrace']
@@ -17,5 +17,10 @@ if with_android_stub
 
   dep_android = declare_dependency(
     link_with : stub_libs,
+    dependencies : [
+      dependency('log'),
+      dependency('sync'),
+      dependency('nativewindow'),
+    ]
   )
 endif
diff --git a/src/gallium/auxiliary/target-helpers/inline_sw_helper.h b/src/gallium/auxiliary/target-helpers/inline_sw_helper.h
index 1937459..36dd74e 100644
--- a/src/gallium/auxiliary/target-helpers/inline_sw_helper.h
+++ b/src/gallium/auxiliary/target-helpers/inline_sw_helper.h
@@ -31,6 +31,7 @@
 
 #ifdef GALLIUM_ZINK
 #include "zink/zink_public.h"
+struct pipe_screen *zink_create_screen(struct sw_winsys *winsys);
 #endif
 
 static inline struct pipe_screen *
diff --git a/src/gallium/drivers/zink/zink_instance.py b/src/gallium/drivers/zink/zink_instance.py
index 03e8d68..8ad2b2d 100644
--- a/src/gallium/drivers/zink/zink_instance.py
+++ b/src/gallium/drivers/zink/zink_instance.py
@@ -130,6 +130,13 @@ impl_code = """
 #include "zink_instance.h"
 #include "zink_screen.h"
 
+#ifdef __ANDROID__
+#define PFN_vkCreateWaylandSurfaceKHR void*
+#define PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR void*
+#define PFN_vkCreateXcbSurfaceKHR void*
+#define PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR void*
+#endif
+
 bool
 zink_create_instance(struct zink_screen *screen, bool display_dev)
 {
diff --git a/src/gallium/drivers/zink/zink_kopper.c b/src/gallium/drivers/zink/zink_kopper.c
index a564f38..0c5c2c5 100644
--- a/src/gallium/drivers/zink/zink_kopper.c
+++ b/src/gallium/drivers/zink/zink_kopper.c
@@ -66,6 +66,9 @@ init_dt_type(struct kopper_displaytarget *cdt)
       cdt->type = KOPPER_WAYLAND;
       break;
 #endif
+#ifdef VK_USE_PLATFORM_ANDROID_KHR
+      VkAndroidSurfaceCreateInfoKHR android;
+#endif
 #ifdef VK_USE_PLATFORM_WIN32_KHR
    case VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR:
       cdt->type = KOPPER_WIN32;
@@ -85,7 +88,7 @@ kopper_CreateSurface(struct zink_screen *screen, struct kopper_displaytarget *cd
    init_dt_type(cdt);
    VkStructureType type = cdt->info.bos.sType;
    switch (type) {
-#ifdef VK_USE_PLATFORM_XCB_KHR
+#ifndef __ANDROID__
    case VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR: {
 #ifdef GLX_USE_APPLE
       error = VK_INCOMPLETE;
@@ -101,6 +104,11 @@ kopper_CreateSurface(struct zink_screen *screen, struct kopper_displaytarget *cd
       VkWaylandSurfaceCreateInfoKHR *wlsci = (VkWaylandSurfaceCreateInfoKHR *)&cdt->info.bos;
       error = VKSCR(CreateWaylandSurfaceKHR)(screen->instance, wlsci, NULL, &surface);
       break;
+#else
+   case VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR:
+       error = VKSCR(CreateAndroidSurfaceKHR)(screen->instance, &cdt->info.android, NULL, &surface);
+       cdt->type = KOPPER_ANDROID;
+       break;
    }
 #endif
 #ifdef VK_USE_PLATFORM_WIN32_KHR
@@ -201,10 +209,15 @@ find_dt_entry(struct zink_screen *screen, const struct kopper_displaytarget *cdt
    struct hash_entry *he = NULL;
    switch (cdt->type) {
 #ifdef VK_USE_PLATFORM_XCB_KHR
+#ifndef __ANDROID__
    case KOPPER_X11: {
       VkXcbSurfaceCreateInfoKHR *xcb = (VkXcbSurfaceCreateInfoKHR *)&cdt->info.bos;
       he = _mesa_hash_table_search_pre_hashed(&screen->dts, xcb->window, (void*)(uintptr_t)xcb->window);
       break;
+#else
+   case KOPPER_ANDROID:
+      he = _mesa_hash_table_search(&screen->dts, cdt->info.android.window);
+      break;
    }
 #endif
 #ifdef VK_USE_PLATFORM_WAYLAND_KHR
@@ -316,6 +329,7 @@ kopper_CreateSwapchain(struct zink_screen *screen, struct kopper_displaytarget *
          cswap->scci.imageExtent.height = cdt->caps.currentExtent.height;
       }
       break;
+   case KOPPER_ANDROID: // FIXME: Android port: is this correct?
    case KOPPER_WAYLAND:
       /* On Wayland, currentExtent is the special value (0xFFFFFFFF, 0xFFFFFFFF), indicating that the
        * surface size will be determined by the extent of a swapchain targeting the surface. Whatever the
@@ -479,10 +493,17 @@ zink_kopper_displaytarget_create(struct zink_screen *screen, unsigned tex_usage,
    simple_mtx_lock(&screen->dt_lock);
    switch (cdt->type) {
 #ifdef VK_USE_PLATFORM_XCB_KHR
+#ifndef __ANDROID__
    case KOPPER_X11: {
       VkXcbSurfaceCreateInfoKHR *xcb = (VkXcbSurfaceCreateInfoKHR *)&cdt->info.bos;
       _mesa_hash_table_insert_pre_hashed(&screen->dts, xcb->window, (void*)(uintptr_t)xcb->window, cdt);
       break;
+#else
+   case KOPPER_ANDROID:
+      if (unlikely(!screen->dts.table))
+         _mesa_hash_table_init(&screen->dts, screen, _mesa_hash_pointer, _mesa_key_pointer_equal);
+      _mesa_hash_table_insert(&screen->dts, cdt->info.android.window, cdt);
+      break;
    }
 #endif
 #ifdef VK_USE_PLATFORM_WAYLAND_KHR
diff --git a/src/gallium/drivers/zink/zink_kopper.h b/src/gallium/drivers/zink/zink_kopper.h
index 8910697..a38cb65 100644
--- a/src/gallium/drivers/zink/zink_kopper.h
+++ b/src/gallium/drivers/zink/zink_kopper.h
@@ -71,6 +71,7 @@ struct kopper_swapchain {
 enum kopper_type {
    KOPPER_X11,
    KOPPER_WAYLAND,
+   KOPPER_ANDROID,
    KOPPER_WIN32
 };
 
diff --git a/src/gallium/drivers/zink/zink_resource.c b/src/gallium/drivers/zink/zink_resource.c
index 8fea8b1..8ababf3 100644
--- a/src/gallium/drivers/zink/zink_resource.c
+++ b/src/gallium/drivers/zink/zink_resource.c
@@ -51,6 +51,10 @@
 #define ZINK_USE_DMABUF
 #endif
 
+#ifdef __ANDROID__
+#undef ZINK_USE_DMABUF
+#endif
+
 #if defined(ZINK_USE_DMABUF) && !defined(_WIN32)
 #include "drm-uapi/drm_fourcc.h"
 #else
diff --git a/src/gallium/frontends/dri/meson.build b/src/gallium/frontends/dri/meson.build
index 09da602..67d8111 100644
--- a/src/gallium/frontends/dri/meson.build
+++ b/src/gallium/frontends/dri/meson.build
@@ -46,7 +46,7 @@ endif
 
 libdri = static_library(
   'dri',
-  [ files_libdri, sha1_h ],
+  [ with_platform_android ? [] : files_libdri, sha1_h ],
   include_directories : [
     inc_include, inc_util, inc_mesa, inc_mapi, inc_src, inc_gallium,
     inc_gallium_aux, inc_util, inc_gallium_drivers, inc_loader,
diff --git a/src/gallium/winsys/sw/dri/dri_sw_winsys.c b/src/gallium/winsys/sw/dri/dri_sw_winsys.c
index 6bd2e6a..3624fa8 100644
--- a/src/gallium/winsys/sw/dri/dri_sw_winsys.c
+++ b/src/gallium/winsys/sw/dri/dri_sw_winsys.c
@@ -26,6 +26,10 @@
  *
  **************************************************************************/
 
+#if ANDROID_API_LEVEL < 26
+#undef HAVE_SYS_SHM_H
+#endif
+
 #ifdef HAVE_SYS_SHM_H
 #include <sys/ipc.h>
 #include <sys/shm.h>
diff --git a/src/glx/meson.build b/src/glx/meson.build
index 13cacf4..a6d3f34 100644
--- a/src/glx/meson.build
+++ b/src/glx/meson.build
@@ -55,6 +55,10 @@ files_libglx = files(
   'xfont.c',
 )
 
+if with_platform_android or host_machine.system() == 'darwin'
+dep_xdamage = null_dep
+endif
+
 extra_libs_libglx = []
 extra_deps_libgl = []
 extra_ld_args_libgl = []
@@ -113,3 +117,3 @@ if with_platform_windows
   'glx',
-  [files_libglx, glx_generated],
+  not with_platform_android and host_machine.system() != 'darwin' ? [files_libglx, glx_generated] : files('empty.c'),
   include_directories : [inc_include, inc_src, inc_glapi, inc_loader, inc_loader_x11,
diff --git a/src/util/libsync.h b/src/util/libsync.h
index 1515484..bdfc0c5 100644
--- a/src/util/libsync.h
+++ b/src/util/libsync.h
@@ -44,7 +44,7 @@
 extern "C" {
 #endif
 
-#if DETECT_OS_ANDROID
+#if ANDROID_API_LEVEL >= 26
 /* On Android, rely on the system's libsync instead of rolling our own
  * sync_wait() and sync_merge().  This gives us compatibility with pre-4.7
  * Android kernels.
diff --git a/src/util/rand_xor.c b/src/util/rand_xor.c
index 81b64f1..a17603b 100644
--- a/src/util/rand_xor.c
+++ b/src/util/rand_xor.c
@@ -68,7 +68,7 @@ s_rand_xorshift128plus(uint64_t seed[2], bool randomised_seed)
 #if !DETECT_OS_WINDOWS
    size_t seed_size = sizeof(uint64_t) * 2;
 
-#if defined(HAVE_GETRANDOM)
+#if defined(HAVE_GETRANDOM) && !defined(__ANDROID__)
    ssize_t ret = getrandom(seed, seed_size, GRND_NONBLOCK);
    if (ret == seed_size)
       return;
diff --git a/sync.pc b/sync.pc
new file mode 100644
index 0000000..9a7ebf2
--- /dev/null
+++ b/sync.pc
@@ -0,0 +1,4 @@
+Name: sync
+Description: Android libsync library
+Version: 1.0
+Libs:
\ No newline at end of file
diff --git a/vulkan_android.pc b/vulkan_android.pc
new file mode 100644
index 0000000..d78a7e4
--- /dev/null
+++ b/vulkan_android.pc
@@ -0,0 +1,4 @@
+Name: vulkan
+Description: Android Vulkan library
+Version: 1.2
+Libs: -lvulkan
\ No newline at end of file
